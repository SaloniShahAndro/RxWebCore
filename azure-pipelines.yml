# ASP.NET Core (.NET Framework)

# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'


steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: 3.1.x
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: 'src/AspNetCore/RxWeb.Core.AspNetCore/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'src/AspNetCore/RxWeb.Core.AspNetCore/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build  $(buildConfiguration) Common'
  inputs:
    projects: 'src/Common/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
    publishTestResults: true
    projects: 'src/AspNetCore/RxWeb.Core.AspNetCore/*.csproj' # update with your test project directory
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: 'src/AspNetCore/RxWeb.Core.AspNetCore/*.csproj'
    versioningScheme: 'off'
  displayName: 'dotnet pack'

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack common'
  inputs:
    command: pack
    packagesToPack: 'src/Common/**/*.csproj'


- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src/AspNetCore/RxWeb.Core.AspNetCore/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
  displayName: 'dotnet Publish'

- task: NuGetAuthenticate@0
  inputs:
    nuGetServiceConnections: 'Connect to Nuget.org'

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'Rxwebcore'


